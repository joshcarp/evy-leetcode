// 509. Fibonacci Number
// Easy
// Topics
// Companies
// The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,
// F(0) = 0, F(1) = 1
// F(n) = F(n - 1) + F(n - 2), for n > 1.
// Given n, calculate F(n).
// Example 1:
// Input: n = 2
// Output: 1
// Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
// Example 2:
// Input: n = 3
// Output: 2
// Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
// Example 3:
// Input: n = 4
// Output: 3
// Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
// Constraints:
// 0 <= n <= 30

func fibonacci:num n:num
    zero := 0
    one := 1
    for range 1 n
        tmp := one
        one = one + zero
        zero = tmp
    end
    return one
end

fails := 0
total := 0

func assert want:any got:any
    if want == got
        total = total + 1
        return
    end
    fails = fails + 1
    total = total + 1
    printf "want != got: want %v got %v\n" want got
end

func finished
    printf "%v of %v tests passed\n" (total - fails) total
end

// -- Test Cases Start -- //
assert 1 (fibonacci 2)
assert 2 (fibonacci 3)
assert 3 (fibonacci 4)
// -- Test Cases End -- //
finished
